require('dotenv').config();
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');

// Import models
const User = require('./models/User');
const Supplier = require('./models/Supplier');
const Product = require('./models/Product');

// K·∫øt n·ªëi MongoDB
const connectDB = async () => {
    try {
        await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/product_supplier_management', {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });
        console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng');
    } catch (error) {
        console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:', error);
        process.exit(1);
    }
};

// X√≥a d·ªØ li·ªáu c≈©
const clearDatabase = async () => {
    try {
        await User.deleteMany({});
        await Supplier.deleteMany({});
        await Product.deleteMany({});
        console.log('üóëÔ∏è ƒê√£ x√≥a d·ªØ li·ªáu c≈©');
    } catch (error) {
        console.error('‚ùå L·ªói x√≥a d·ªØ li·ªáu:', error);
    }
};

// T·∫°o users m·∫´u
const createUsers = async () => {
    try {
        const users = [
            {
                username: 'admin',
                email: 'admin@example.com',
                password: await bcrypt.hash('Admin123', 10),
                phone: '0123456789',
                role: 'admin'
            },
            {
                username: 'manager',
                email: 'manager@example.com',
                password: await bcrypt.hash('Manager123', 10),
                phone: '0987654321',
                role: 'user'
            },
            {
                username: 'staff',
                email: 'staff@example.com',
                password: await bcrypt.hash('Staff123', 10),
                phone: '0345678901',
                role: 'user'
            }
        ];

        const createdUsers = await User.insertMany(users);
        console.log(`‚úÖ ƒê√£ t·∫°o ${createdUsers.length} users`);
        return createdUsers;
    } catch (error) {
        console.error('‚ùå L·ªói t·∫°o users:', error);
        return [];
    }
};

// T·∫°o suppliers m·∫´u
const createSuppliers = async (adminUser) => {
    try {
        const suppliers = [
            {
                name: 'C√¥ng ty TNHH Samsung Vi·ªát Nam',
                address: '15 Ph·ªë L√™ Th√°i T·ªï, Ho√†n Ki·∫øm, H√† N·ªôi',
                phone: '0241234567',
                email: 'contact@samsung.vn',
                website: 'https://samsung.com',
                description: 'Nh√† cung c·∫•p thi·∫øt b·ªã ƒëi·ªán t·ª≠, ƒëi·ªán tho·∫°i th√¥ng minh v√† thi·∫øt b·ªã gia d·ª•ng',
                createdBy: adminUser._id
            },
            {
                name: 'C√¥ng ty C·ªï ph·∫ßn FPT',
                address: '17 Duy T√¢n, C·∫ßu Gi·∫•y, H√† N·ªôi',
                phone: '0242345678',
                email: 'info@fpt.com.vn',
                website: 'https://fpt.com.vn',
                description: 'Cung c·∫•p gi·∫£i ph√°p c√¥ng ngh·ªá th√¥ng tin v√† vi·ªÖn th√¥ng',
                createdBy: adminUser._id
            },
            {
                name: 'C√¥ng ty TNHH Apple Vi·ªát Nam',
                address: '68 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM',
                phone: '0283456789',
                email: 'support@apple.vn',
                website: 'https://apple.com',
                description: 'Nh√† cung c·∫•p thi·∫øt b·ªã c√¥ng ngh·ªá cao v√† ph·∫ßn m·ªÅm',
                createdBy: adminUser._id
            },
            {
                name: 'T·∫≠p ƒëo√†n Vingroup',
                address: '7 B·∫±ng LƒÉng 1, Vinhomes Riverside, Long Bi√™n, H√† N·ªôi',
                phone: '0244567890',
                email: 'contact@vingroup.net',
                website: 'https://vingroup.net',
                description: 'T·∫≠p ƒëo√†n ƒëa ng√†nh v·ªõi c√°c s·∫£n ph·∫©m t·ª´ b·∫•t ƒë·ªông s·∫£n ƒë·∫øn c√¥ng ngh·ªá',
                createdBy: adminUser._id
            },
            {
                name: 'C√¥ng ty TNHH LG Electronics Vi·ªát Nam',
                address: '20 C·ªông H√≤a, T√¢n B√¨nh, TP.HCM',
                phone: '0285678901',
                email: 'info@lge.com',
                website: 'https://lg.com',
                description: 'S·∫£n xu·∫•t v√† cung c·∫•p thi·∫øt b·ªã gia d·ª•ng, ƒëi·ªán t·ª≠ ti√™u d√πng',
                createdBy: adminUser._id
            }
        ];

        const createdSuppliers = await Supplier.insertMany(suppliers);
        console.log(`‚úÖ ƒê√£ t·∫°o ${createdSuppliers.length} suppliers`);
        return createdSuppliers;
    } catch (error) {
        console.error('‚ùå L·ªói t·∫°o suppliers:', error);
        return [];
    }
};

// T·∫°o products m·∫´u
const createProducts = async (suppliers, adminUser) => {
    try {
        const samsungSupplier = suppliers.find(s => s.name.includes('Samsung'));
        const appleSupplier = suppliers.find(s => s.name.includes('Apple'));
        const fptSupplier = suppliers.find(s => s.name.includes('FPT'));
        const lgSupplier = suppliers.find(s => s.name.includes('LG'));
        const vingroupSupplier = suppliers.find(s => s.name.includes('Vingroup'));

        const products = [
            // Samsung products
            {
                name: 'Samsung Galaxy S24 Ultra',
                sku: 'SAM-S24U-001',
                price: 31990000,
                quantity: 25,
                description: 'ƒêi·ªán tho·∫°i th√¥ng minh cao c·∫•p v·ªõi camera 200MP, m√†n h√¨nh Dynamic AMOLED 6.8 inch',
                supplier: samsungSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'Samsung QLED TV 65 inch',
                sku: 'SAM-TV65-002',
                price: 25990000,
                quantity: 15,
                description: 'Smart TV QLED 4K 65 inch v·ªõi c√¥ng ngh·ªá Quantum Dot',
                supplier: samsungSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'Samsung Galaxy Watch 6',
                sku: 'SAM-GW6-003',
                price: 7990000,
                quantity: 40,
                description: 'ƒê·ªìng h·ªì th√¥ng minh v·ªõi t√≠nh nƒÉng theo d√µi s·ª©c kh·ªèe to√†n di·ªán',
                supplier: samsungSupplier._id,
                createdBy: adminUser._id
            },

            // Apple products
            {
                name: 'iPhone 15 Pro Max',
                sku: 'APP-IP15PM-001',
                price: 34990000,
                quantity: 20,
                description: 'iPhone cao c·∫•p nh·∫•t v·ªõi chip A17 Pro, camera 48MP v√† khung Titanium',
                supplier: appleSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'MacBook Pro 14 inch M3',
                sku: 'APP-MBP14-002',
                price: 52990000,
                quantity: 10,
                description: 'Laptop chuy√™n nghi·ªáp v·ªõi chip M3, m√†n h√¨nh Liquid Retina XDR',
                supplier: appleSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'iPad Air 11 inch',
                sku: 'APP-IPAD11-003',
                price: 16990000,
                quantity: 30,
                description: 'M√°y t√≠nh b·∫£ng m·ªèng nh·∫π v·ªõi chip M2, h·ªó tr·ª£ Apple Pencil',
                supplier: appleSupplier._id,
                createdBy: adminUser._id
            },

            // FPT products
            {
                name: 'FPT Play Box S',
                sku: 'FPT-PBS-001',
                price: 1590000,
                quantity: 50,
                description: 'Android TV Box v·ªõi kho n·ªôi dung phong ph√∫ t·ª´ FPT Play',
                supplier: fptSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'Camera FPT Smart Home',
                sku: 'FPT-CAM-002',
                price: 990000,
                quantity: 35,
                description: 'Camera an ninh th√¥ng minh v·ªõi t√≠nh nƒÉng AI nh·∫≠n di·ªán',
                supplier: fptSupplier._id,
                createdBy: adminUser._id
            },

            // LG products
            {
                name: 'LG OLED TV 77 inch',
                sku: 'LG-OLED77-001',
                price: 65990000,
                quantity: 8,
                description: 'TV OLED cao c·∫•p v·ªõi ch·∫•t l∆∞·ª£ng h√¨nh ·∫£nh tuy·ªát ƒë·ªânh',
                supplier: lgSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'T·ªß l·∫°nh LG InstaView 626L',
                sku: 'LG-RF626-002',
                price: 32990000,
                quantity: 12,
                description: 'T·ªß l·∫°nh th√¥ng minh v·ªõi c√¥ng ngh·ªá InstaView Door-in-Door',
                supplier: lgSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'M√°y gi·∫∑t LG AI DD 9kg',
                sku: 'LG-WM9KG-003',
                price: 13990000,
                quantity: 18,
                description: 'M√°y gi·∫∑t th√¥ng minh v·ªõi c√¥ng ngh·ªá AI Direct Drive',
                supplier: lgSupplier._id,
                createdBy: adminUser._id
            },

            // Vingroup products
            {
                name: 'VinSmart Joy 4',
                sku: 'VIN-JOY4-001',
                price: 2990000,
                quantity: 45,
                description: 'Smartphone t·∫ßm trung v·ªõi thi·∫øt k·∫ø sang tr·ªçng, camera AI',
                supplier: vingroupSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'VinSmart TV 43 inch',
                sku: 'VIN-TV43-002',
                price: 7990000,
                quantity: 22,
                description: 'Smart TV Android v·ªõi ƒë·ªô ph√¢n gi·∫£i 4K, k·∫øt n·ªëi wifi',
                supplier: vingroupSupplier._id,
                createdBy: adminUser._id
            },

            // Th√™m m·ªôt s·ªë s·∫£n ph·∫©m s·∫Øp h·∫øt h√†ng
            {
                name: 'Samsung Galaxy Buds Pro',
                sku: 'SAM-GBP-004',
                price: 4990000,
                quantity: 3,
                description: 'Tai nghe kh√¥ng d√¢y cao c·∫•p v·ªõi kh·ª≠ ti·∫øng ·ªìn ch·ªß ƒë·ªông',
                supplier: samsungSupplier._id,
                createdBy: adminUser._id
            },
            {
                name: 'Apple AirPods Pro 2',
                sku: 'APP-APP2-004',
                price: 6990000,
                quantity: 2,
                description: 'Tai nghe kh√¥ng d√¢y v·ªõi chip H2 v√† kh·ª≠ ti·∫øng ·ªìn th·∫ø h·ªá m·ªõi',
                supplier: appleSupplier._id,
                createdBy: adminUser._id
            }
        ];

        const createdProducts = await Product.insertMany(products);
        console.log(`‚úÖ ƒê√£ t·∫°o ${createdProducts.length} products`);
        return createdProducts;
    } catch (error) {
        console.error('‚ùå L·ªói t·∫°o products:', error);
        return [];
    }
};

// H√†m ch√≠nh ƒë·ªÉ seed d·ªØ li·ªáu
const seedDatabase = async () => {
    console.log('üå± B·∫Øt ƒë·∫ßu seed d·ªØ li·ªáu...');
    
    await connectDB();
    await clearDatabase();
    
    const users = await createUsers();
    const adminUser = users.find(user => user.role === 'admin');
    
    if (!adminUser) {
        console.error('‚ùå Kh√¥ng t√¨m th·∫•y admin user');
        process.exit(1);
    }
    
    const suppliers = await createSuppliers(adminUser);
    const products = await createProducts(suppliers, adminUser);
    
    console.log('\nüéâ Seed d·ªØ li·ªáu ho√†n th√†nh!');
    console.log(`üìä T·ªïng k·∫øt:`);
    console.log(`   üë• Users: ${users.length}`);
    console.log(`   üè¢ Suppliers: ${suppliers.length}`);
    console.log(`   üì¶ Products: ${products.length}`);
    
    console.log('\nüîê Th√¥ng tin ƒëƒÉng nh·∫≠p:');
    console.log('   üë®‚Äçüíº Admin: admin / Admin123');
    console.log('   üë®‚Äçüíª Manager: manager / Manager123');
    console.log('   üë®‚Äçüîß Staff: staff / Staff123');
    
    process.exit(0);
};

// X·ª≠ l√Ω l·ªói
process.on('unhandledRejection', (err) => {
    console.error('‚ùå Unhandled Rejection:', err);
    process.exit(1);
});

// Ch·∫°y seed
if (require.main === module) {
    seedDatabase();
}

module.exports = { seedDatabase, clearDatabase };